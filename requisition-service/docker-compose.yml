version: '3.8'

services:
  # Requisition Service (Django Application)
  web:
    build:
      context: .
    container_name: requisition_service
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8003:8000"
    depends_on:
      - db
      - redis
    environment:
      DJANGO_DB_HOST: db
      DJANGO_DB_PORT: 3306
      DJANGO_DB_NAME: ${DJANGO_DB_NAME}
      DJANGO_DB_USER: ${DJANGO_DB_USER}
      DJANGO_DB_PASSWORD: ${DJANGO_DB_PASSWORD}
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DJANGO_DEBUG: ${DJANGO_DEBUG}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}

  # Redis Service (Message Broker for Celery)
  redis:
    image: redis:alpine
    container_name: requisition_redis
    ports:
      - "6379:6379"
    networks:
      - backend-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Celery Worker Service
  celery:
    build:
      context: .
    container_name: requisition_celery
    command: celery -A requisition_service worker --loglevel=info
    depends_on:
      - redis
      - db
    environment:
      DJANGO_DB_HOST: db
      DJANGO_DB_PORT: 3306
      DJANGO_DB_NAME: ${DJANGO_DB_NAME}
      DJANGO_DB_USER: ${DJANGO_DB_USER}
      DJANGO_DB_PASSWORD: ${DJANGO_DB_PASSWORD}
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DJANGO_DEBUG: ${DJANGO_DEBUG}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
    networks:
      - backend-network

  # MySQL Database for Requisition Service
  db:
    image: mysql:8.0
    container_name: requisition_db
    restart: always
    environment:
      MYSQL_DATABASE: ${DJANGO_DB_NAME}
      MYSQL_USER: ${DJANGO_DB_USER}
      MYSQL_PASSWORD: ${DJANGO_DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: rootpassword
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  db_data:

networks:
  backend-network:
    driver: bridge