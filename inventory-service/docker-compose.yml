version: '3.8'

services:
  inventory-service:
    build:
      context: ./inventory-service
    ports:
      - "8002:8000"
    env_file:
      - .env
    networks:
      - backend-network
    depends_on:
      inventory-db:
        condition: service_healthy
    command: >
      sh -c "until nc -z inventory-db 3306; do
      echo 'Waiting for database...'; sleep 2; done &&
      gunicorn --bind 0.0.0.0:8000 --workers 4 inventory_service.wsgi:application"
    restart: unless-stopped

  inventory-db:
    image: mysql:8.0
    ports:
      - "3308:3306"
    env_file:
      - .env
    environment:
      MYSQL_DATABASE: ${DJANGO_DB_NAME}
      MYSQL_USER: ${DJANGO_DB_USER}
      MYSQL_PASSWORD: ${DJANGO_DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - inventory-mysql-data:/var/lib/mysql
      - ./inventory-service/db-init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - backend-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 5s
      timeout: 10s
      retries: 10
    restart: unless-stopped

volumes:
  inventory-mysql-data:

networks:
  backend-network:
    driver: bridge