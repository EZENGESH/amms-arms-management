version: '3.8'

services:
  db:
    image: mysql:8.0
    container_name: inventory_db
    restart: always
    env_file:
      - db.env
    environment:
      MYSQL_DATABASE: inventory_db
      MYSQL_USER: inventory_user
      MYSQL_PASSWORD: securepassword
      MYSQL_ROOT_PASSWORD: rootpassword
    ports:
      - "3306:3306"
    volumes:
      - inventory-db_data:/var/lib/mysql
    networks:
      backend-network:
        aliases:
          - inventory-db
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpassword"]
      interval: 5s
      timeout: 5s
      retries: 5

  inventory-service:
    ports:
      - "8002:8000"
    build:
      context: .
    command: >
      sh -c "while ! nc -z db 3306; do sleep 2; done &&
      python manage.py migrate &&
      gunicorn --bind 0.0.0.0:8000 --workers 2 --timeout 120 inventory_service.wsgi:application"
    environment:
      - DB_HOST=inventory-db
      - DB_PORT=3306
      - DB_NAME=${DB_NAME:-inventory_db}
      - DB_USER=${DB_USER:-inventory_user}
      - DB_PASSWORD=${DB_PASSWORD:-securepassword}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - backend-network

  redis:
    image: redis:alpine
    container_name: inventory_redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend-network

  celery:
    build:
      context: .
    environment:
      - DB_HOST=inventory-db
    networks:
      - backend-network

volumes:
  inventory-db_data:

networks:
  backend-network:
    driver: bridge