services:
  db:
    image: mysql:8.0
    container_name: inventory_db
    restart: always
    env_file:
      - db.env
    environment:
      MYSQL_DATABASE: ${DJANGO_DB_NAME}
      MYSQL_USER: ${DJANGO_DB_USER}
      MYSQL_PASSWORD: ${DJANGO_DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: rootpassword
    ports:
      - "3310:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - backend-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-prootpassword"]
      interval: 5s
      timeout: 5s
      retries: 5

  inventory-service:
    build:
      context: .
    command: >
      sh -c "while ! nc -z db 3310; do sleep 2; done &&
      python manage.py migrate &&
      gunicorn --bind 0.0.0.0:8000 --workers 2 --timeout 120 inventory_service.wsgi:application"
    environment:
      - DB_HOST=db
      - DB_PORT=3310
      - DB_NAME=${DJANGO_DB_NAME}
      - DB_USER=${DJANGO_DB_USER}
      - DB_PASSWORD=${DJANGO_DB_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - backend-network

  redis:
    image: redis:alpine
    container_name: inventory_redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend-network

  celery:
    build:
      context: .
    environment:
      DJANGO_DB_HOST: db
    networks:
      - backend-network