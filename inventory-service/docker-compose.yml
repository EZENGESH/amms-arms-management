version: '3.8'

services:
  inventory-service:
    build:
      context: ./inventory-service
    ports:
      - "8002:8000"
    env_file:
      - .env
    environment:
      # Azure Application Insights for monitoring
      APPLICATIONINSIGHTS_CONNECTION_STRING: ${APPLICATIONINSIGHTS_CONNECTION_STRING}
      # Azure KeyVault integration (for production)
      AZURE_KEYVAULT_ENDPOINT: ${AZURE_KEYVAULT_ENDPOINT}
      # Database connection string - more secure approach for Azure
      DJANGO_DB_CONNECTION_STRING: "mysql://${DJANGO_DB_USER}:${DJANGO_DB_PASSWORD}@inventory-db:3306/${DJANGO_DB_NAME}"
    networks:
      - backend-network
    depends_on:
      inventory-db:
        condition: service_healthy
    command: >
      sh -c "until nc -z inventory-db 3306; do
      echo 'Waiting for database...'; sleep 2; done &&
      gunicorn --bind 0.0.0.0:8000 --workers 4 
      --access-logfile - 
      --error-logfile - 
      --logger-class=opencensus.ext.django.traces.AppEngineLogger
      inventory_service.wsgi:application"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  inventory-db:
    image: mysql:8.0
    ports:
      - "3308:3306"
    env_file:
      - .env
    environment:
      MYSQL_DATABASE: ${DJANGO_DB_NAME}
      MYSQL_USER: ${DJANGO_DB_USER}
      MYSQL_PASSWORD: ${DJANGO_DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      # Performance optimizations for Azure VMs
      MYSQL_INNODB_BUFFER_POOL_SIZE: ${MYSQL_INNODB_BUFFER_POOL_SIZE:-134217728}
    volumes:
      - inventory-mysql-data:/var/lib/mysql
      - ./inventory-service/db-init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./inventory-service/mysql-config:/etc/mysql/conf.d
    networks:
      - backend-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 5s
      timeout: 10s
      retries: 10
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  inventory-mysql-data:
    # For Azure, use Azure File Shares or Managed Disks in production
    # driver: azure_file
    # driver_opts:
    #   share_name: inventory-mysql-data
    #   storage_account_name: ${STORAGE_ACCOUNT_NAME}

networks:
  backend-network:
    driver: bridge